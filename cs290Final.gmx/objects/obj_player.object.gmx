<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_standingForward</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facingFront = true;
facingBack = false;
facingLeft = false;
facingRight = false;

canMoveUp = true;
canMoveDown = true;
canMoveLeft = true;
canMoveRight = true;

if(room = rm_3){
    image_xscale = image_xscale*.85;
    image_yscale = image_yscale*.85;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check_direct(vk_up);
down = keyboard_check_direct(vk_down);
left = keyboard_check_direct(vk_left);
right = keyboard_check_direct(vk_right);

if(up&amp;&amp;canMoveUp){
    sprite_index = spr_walkingBackward;
    y-=5;
    facingBack = true;
    facingFront = false;
    facingLeft = false;
    facingRight = false;
}
else if(down&amp;&amp;canMoveDown){
    sprite_index = spr_walkingForward;
    y+=5;
    facingBack = false;
    facingFront = true;
    facingLeft = false;
    facingRight = false;
}
else if(left&amp;&amp;canMoveLeft){
    sprite_index = spr_walkingLeft;
    x-=5;
    facingBack = false;
    facingFront = false;
    facingLeft = true;
    facingRight = false;
}
else if(right&amp;&amp;canMoveRight){
    sprite_index = spr_walkingRight;
    x+=5;
    facingBack = false;
    facingFront = false;
    facingLeft = false;
    facingRight = true;
}
else{
    if(room!=testRoomSpace){
    if(facingBack) sprite_index = spr_standingBackward;
    else if(facingFront) sprite_index = spr_standingForward;
    else if(facingLeft) sprite_index = spr_standingLeft;
    else if(facingRight) sprite_index = spr_standingRight;
    }
}

if(place_meeting(x+5,y,obj_myBounds))canMoveRight = false;
else canMoveRight = true;
if(place_meeting(x-5,y,obj_myBounds))canMoveLeft = false;
else canMoveLeft = true;
if(place_meeting(x,y+5,obj_myBounds))canMoveDown = false;
else canMoveDown = true;
if(place_meeting(x,y-5,obj_myBounds))canMoveUp = false;
else canMoveUp = true;

if(x&gt;=room_width-32) x=room_width-32;
if(x&lt;=0)x=0;
if(y&gt;room_height-32) y=room_height-32;
if(y&lt;=0)y=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_doorBound">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(x&gt;400){
        obj_gameControler.room4ScoreKey = false;
        room_goto(rm_4);
        show_message("This room contains falling spikes of doom. Use the arrow keys to avoid the spikes and collect gold coins! But watch out, there's a twist...literally.");
    }
    else if(x&lt;200){
        draw_set_color(c_white);
        draw_set_font(fnt_room4Score);
        room_goto(shield_minigame_room);
    }
    else if(y&gt;250){
        show_message("This room contains a randomly generated maze. Use the arrow keys to maneuver the maze and find the key! Or not, because after all I'm just a signpost.")
        room_goto(rm_pre3);
    }
    else if(obj_gameControler.fallingGameKey&amp;&amp;obj_gameControler.shootingGameKey&amp;&amp;obj_gameControler.mazeGameKey) room_goto(bossroom_intro);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_coin">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_coin</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_room4Controler.coinCount++;
if(obj_room4Controler.coinCount%2==0){
    obj_room4Controler.change=true;
    view_angle[0]+=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
