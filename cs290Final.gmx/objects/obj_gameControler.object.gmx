<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>points=100;
fallingGameKey = false;
shootingGameKey = false;
mazeGameKey = false;
placed1 = false;
placed2 = false;
placed3 = false;
room4ScoreKey = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room!=rm_4) audio_stop_sound(snd_room4Music);
if(room==rm_4){
    if(!audio_is_playing(snd_room4Music)) 
        audio_play_sound(snd_room4Music,1,true);
    if(!obj_room4Controler.start){
        points=100;
    }
    win=false;
    if(points==0) room_goto(rm_4Score);
}


if(room==rm_3)
    if(!audio_is_playing(snd_mazeMusic)) 
        audio_play_sound(snd_mazeMusic,1,true);
if(room!=rm_3) audio_stop_sound(snd_mazeMusic);


if(room==shield_minigame_room)
    if(!audio_is_playing(snd_shootingRoomMusic)) 
        audio_play_sound(snd_shootingRoomMusic,1,true);
if(room!=shield_minigame_room) audio_stop_sound(snd_shootingRoomMusic);

if(room==bossroom_main)
    if(!audio_is_playing(snd_bossBattleMusic)) 
        audio_play_sound(snd_bossBattleMusic,1,true);
if(room!=bossroom_main) audio_stop_sound(snd_bossBattleMusic);


if(room==rm_main){
    if(fallingGameKey&amp;&amp;!placed1){
        instance_create(room_width-32,30,obj_myKey);
        placed1 = true;
    }
    if(shootingGameKey&amp;&amp;!placed2){
        instance_create(room_width-64,30,obj_myKey);
        placed2=true;
    }
    if(mazeGameKey&amp;&amp;!placed3){
        instance_create(room_width-96,30,obj_myKey);
        placed3 = true;
    }
    if(!audio_is_playing(snd_lobbyMusic)) 
    audio_play_sound(snd_lobbyMusic,1,true);
    
    if(keyboard_check_direct(ord('K'))&amp;&amp;keyboard_check_direct(ord('E'))&amp;&amp;keyboard_check_direct(ord('Y'))&amp;&amp;keyboard_check_direct(ord('1'))) fallingGameKey=true;
    if(keyboard_check_direct(ord('K'))&amp;&amp;keyboard_check_direct(ord('E'))&amp;&amp;keyboard_check_direct(ord('Y'))&amp;&amp;keyboard_check_direct(ord('2'))) shootingGameKey=true;
    if(keyboard_check_direct(ord('K'))&amp;&amp;keyboard_check_direct(ord('E'))&amp;&amp;keyboard_check_direct(ord('Y'))&amp;&amp;keyboard_check_direct(ord('3'))) mazeGameKey=true;
}
if(room!=rm_main){
    placed1 = false;
    placed2 = false;
    placed3 = false;
    audio_stop_sound(snd_lobbyMusic);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
