<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_catStill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facingRight = true;
facingLeft = false;
yspeed = 1;
canJump=true;
right = false;
left = false;


/*rightHit = false;
leftHit = false;
xspeed = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!left&amp;&amp;keyboard_check_pressed(vk_right)){
    facingRight = true;
    facingLeft = false;
    sprite_index = spr_catWalk;
    //image_xscale = 1;
}

if(!left&amp;&amp;keyboard_check_direct(vk_right)){
    facingRight = true;
    facingLeft = false;
    right = true;
    if(keyboard_check_pressed(vk_shift)) sprite_index = spr_catRun;
    if(keyboard_check_direct(vk_shift)) x+=10;
    else x+=6;
    if(keyboard_check_released(vk_shift)) sprite_index = spr_catWalk;
}

if(!left&amp;&amp;keyboard_check_released(vk_right)){
    sprite_index = spr_catStill;
    right = false;
}

if(!right&amp;&amp;keyboard_check_pressed(vk_left)){
    facingLeft = true;
    facingRight = false;
    sprite_index = spr_catWalkLeft;
    //image_xscale = -1;
}
if(!right&amp;&amp;keyboard_check_direct(vk_left)){
    facingLeft = true;
    facingRight = false;
    left = true;
    if(keyboard_check_pressed(vk_shift)) sprite_index = spr_catRunLeft;
    if(keyboard_check_direct(vk_shift)) x-=15;
    else x-=6;
    if(keyboard_check_released(vk_shift)) sprite_index = spr_catWalkLeft;
}

if(!right&amp;&amp;keyboard_check_released(vk_left)){
    sprite_index = spr_catStillLeft;
    left = false;
}

if(keyboard_check_pressed(vk_space)&amp;&amp;canJump){
    yspeed = -15;
    canJump = false;
}

if(!place_meeting(x,y+yspeed,obj_floor)){
    y+=yspeed;
    yspeed+=1;
}
else{
    yspeed = 1;
    canJump = true;
}

if(keyboard_check_pressed(vk_tab)) room_restart();





/*if(rightHit){
    object5.x+=xspeed;
    xspeed--;
    if(xspeed==0){rightHit = false; xspeed = 15;}
}
if(leftHit){
    object5.x-=xspeed;
    xspeed--;
    if(xspeed == 0){leftHit = false; xspeed = 15;}
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(facingRight)
    rightHit = true;
if(facingLeft)
    leftHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
