<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startTurn = false
scored = false
freeHorzSpots = noone
freeVertSpots = noone
numFreeHorzSpots = 0
numFreeVertSpots = 0

freeHorzSpots[0] = 64
freeHorzSpots[1] = 64

freeVertSpots[0] = 64
freeVertSpots[1] = 64

xDot = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>line = noone
newLine = noone
if(obj_game_controler.numLines!=0){
    //go through the array of placed lines and see if a box can be made
    for(i=0;i&lt;obj_game_controler.numLines;i++){
        if(obj_game_controler.lineArray[i].sum==2){
            line = obj_game_controler.lineArray[i]
            i = obj_game_controler.numLines
            //vertical line
            if(object_get_name(line.object_index)=="obj_vert_placed_line"){
                if(line.top==0){
                    newLine = instance_create(line.x-64,line.y,obj_horz_placed_line)
                    if(newLine.y!=64&amp;&amp;newLine.sum==3){
                        instance_create(line.x-64,line.y-64,obj_player_two_box)
                    }
                }
                else if(line.left==0){
                    newLine = instance_create(line.x-64,line.y,obj_vert_placed_line)
                    if(newLine.x!=64&amp;&amp;newLine.sum==3){
                        instance_create(line.x-128,line.y,obj_player_two_box)
                    }
                }
                else{
                    newLine = instance_create(line.x-64,line.y+64,obj_horz_placed_line)
                    if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)&amp;&amp;position_meeting(newLine.x,newLine.y,obj_vert_placed_line)&amp;&amp;position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        instance_create(line.x-64,line.y+64,obj_player_two_box)
                    }
                }
                instance_create(line.x-64,line.y,obj_player_two_box)
            }
            //horizontal line
            else{
                if(line.top==0){
                    newLine = instance_create(line.x,line.y-64,obj_horz_placed_line)
                    if(newLine.y!=64&amp;&amp;newLine.sum==3){
                        instance_create(line.x,line.y-128,obj_player_two_box)
                    }
                }
                else if(line.left==0){
                    newLine = instance_create(line.x,line.y-64,obj_vert_placed_line)
                    if(newLine.x!=64&amp;&amp;newLine.sum==3){
                        instance_create(line.x-64,line.y-64,obj_player_two_box)
                    }
                }
                else{
                    newLine = instance_create(line.x+64,line.y-64,obj_vert_placed_line)
                    if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)&amp;&amp;position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)&amp;&amp;position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        instance_create(line.x+64,line.y-64,obj_player_two_box)
                    }
                }
                instance_create(line.x,line.y-64,obj_player_two_box)
            }
            scored=true
        }
    }
    //if no box could be made, go through array of placed lines to find a line with no other lines attached
    if(!instance_exists(line)){
        for(i=0;i&lt;obj_game_controler.numLines;i++){
            if(obj_game_controler.lineArray[i].sum==0){
                line = obj_game_controler.lineArray[i]
                randNum = ceil(random(3))
                if(object_get_name(line.object_index)=="obj_vert_placed_line"){
                    if(randNum==1){
                        newLine = instance_create(line.x-64,line.y,obj_vert_placed_line)
                    }
                    else if(randNum==2){
                        newLine = instance_create(line.x-64,line.y,obj_horz_placed_line)
                    }
                    else{
                        newLine = instance_create(line.x-64,line.y+64,obj_horz_placed_line)
                    }
                }
                else{
                    if(randNum == 1){
                        newLine = instance_create(line.x,line.y-64,obj_horz_placed_line)
                    }
                    else if(randNum==2){
                        newLine = instance_create(line.x,line.y-64,obj_vert_placed_line)
                    }
                    else{
                        newLine = instance_create(line.x+64,line.y-64,obj_vert_placed_line)
                    }
                }
            }
            /*else if(obj_game_controler.lineArray[i].sum==1){
                line = obj_game_controler.lineArray[i]
                randNum = ceil(random(2))
                if(object_get_name(line.object_index)=="obj_vert_placed_line"){
                    if(line.top==1){
                        if(randNum==1){
                            newLine = instance_create(line.x-64,line.y,obj_vert_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x-64,line.y+64,obj_horz_placed_line)
                        }
                    }
                    else if(line.left==1){
                        if(randNum==1){
                            newLine = instance_create(line.x-64,line.y,obj_horz_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x-64,line.y+64,obj_horz_placed_line)
                        }
                    }
                    else{
                        if(randNum==1){
                            newLine = instance_create(line.x-64,line.y,obj_horz_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x-64,line.y,obj_vert_placed_line)
                        }
                    }
                }
                else{
                    if(line.top==1){
                        if(randNum == 1){
                            newLine = instance_create(line.x,line.y-64,obj_vert_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x+64,line.y-64,obj_vert_placed_line)
                        }
                    }
                    else if(line.left==1){
                        if(randNum == 1){
                            newLine = instance_create(line.x,line.y-64,obj_horz_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x+64,line.y-64,obj_vert_placed_line)
                        }
                    }
                    else{
                        if(randNum == 1){
                            newLine = instance_create(line.x,line.y-64,obj_horz_placed_line)
                        }
                        else{
                            newLine = instance_create(line.x,line.y-64,obj_vert_placed_line)
                        }
                    }
                }  
            }*/
            if(instance_exists(newLine)){
                if(newLine.sum==2){
                    with(newLine){instance_destroy()}
                    line = noone
                }
                
                
                
                
                //not sure
                
                
                else if(object_get_name(newLine.object_index)=="obj_vert_placed_line"){
                    if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        }                        
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        } 
                    }
                    else if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        }
                    }
                    else{
                        line = 0
                        i = obj_game_controler.numLines
                    }
                }
                else if(object_get_name(newLine.object_index)=="obj_horz_placed_line"){
                    if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        }                       
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        }  
                    }
                    else if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = obj_game_controler.numLines
                        }  
                    }
                    else{
                        line = 0
                        i = obj_game_controler.numLines
                    }
                }
                
                
                
                
                else{
                    i = obj_game_controler.numLines
                    line = 0
                }
            }
        }
    }
    
    //pick a random free spot to place a line and check if it gives the player a square, if it does, pick a diffrent line
    if(!instance_exists(line)){
        for(i=0;i&lt;numFreeHorzSpots;i+=2){
            xVal = freeHorzSpots[i]
            yVal = freeHorzSpots[i+1]
            newLine = instance_create(xVal,yVal,obj_horz_placed_line)
            if(instance_exists(newLine)){
                if(newLine.sum&gt;=2){
                    with(newLine){instance_destroy()}
                    line = noone
                }
                
                
                
                //not sure
                else if(object_get_name(newLine.object_index)=="obj_vert_placed_line"){
                    if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        }                        
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        } 
                    }
                    else if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        }
                    }
                    else{
                        line = 0
                        i = numFreeHorzSpots
                    }
                }
                else if(object_get_name(newLine.object_index)=="obj_horz_placed_line"){
                    if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        }                       
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        }  
                    }
                    else if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeHorzSpots
                        }  
                    }
                    else{
                        line = 0
                        i = numFreeHorzSpots
                    }
                }
                
                
                
                
                
                else{
                    line = 0
                    i = numFreeHorzSpots
                }
            }
        }
    }
    if(!instance_exists(line)){
        for(i=0;i&lt;numFreeVertSpots;i+=2){
            xVal = freeVertSpots[i]
            yVal = freeVertSpots[i+1]
            newLine = instance_create(xVal,yVal,obj_vert_placed_line)
            if(instance_exists(newLine)){
                if(newLine.sum&gt;=2){
                    with(newLine){instance_destroy()}
                    line = noone
                }
                
                
                //not sure
                
                else if(object_get_name(newLine.object_index)=="obj_vert_placed_line"){
                    if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        }                        
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        } 
                    }
                    else if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x,newLine.y,obj_horz_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        }
                    }
                    else{
                        line = 0
                        i = numFreeVertSpots
                    }
                }
                else if(object_get_name(newLine.object_index)=="obj_horz_placed_line"){
                    if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)){
                        if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        }                       
                    }
                    else if(position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        }  
                    }
                    else if(position_meeting(newLine.x+64,newLine.y,obj_vert_placed_line)){
                        if(position_meeting(newLine.x,newLine.y+64,obj_horz_placed_line)||position_meeting(newLine.x,newLine.y,obj_vert_placed_line)){
                            with(newLine){instance_destroy()}
                            line = noone
                        }
                        else{
                            line = 0
                            i = numFreeVertSpots
                        }  
                    }
                    else{
                        line = 0
                        i = numFreeVertSpots
                    }
                }
                
                
                
                
                
                
                
                else{
                    line = 0
                    i = numFreeVertSpots
                }
            }
        }
    }
    
   
    
     
     //Test path sizes
     /*if(!instance_exists(line)){
        lineLocation[0] = -1
        lineLocation[1] = -1
        lineLocation[2] = 50
        tempFreeHorzSpots = freeHorzSpots
        tempNumFreeHorzSpots = numFreeHorzSpots
        tempFreeVertSpots = freeVertSpots
        tempNumFreeVertSpots = numFreeVertSpots
        totalFreeSpots = numFreeVertSpots+numFreeHorzSpots
        while(totalFreeSpots!=0){
        
            if(tempNumHorzFreeSpots!=0){
                if(tempFreeHorzSpots[1]==0){
                    pathLength = 0
                    path = true
                    pathLine = instance_create(tempFreeHorzSpots[0],tempFreeHorzSpots[1],obj_horz_placed_line)
                    pathLine2 = noone
                    while(path){
                        if(pathLine == obj_horz_line){
                            if(!position_meeting(pathLine.x+64, pathLine.y+32, obj_vert_placed_line)){
                                pathLine2 = instance_create(pathLine.x+64, pathLine.y, obj_vert_placed_line)//pathLine2 = instance_nearest(pathLine.x+64, pathLine.y, obj_vert_placed_line)
                                if(pathLine2.sum==3){
                                    pathLength++
                                    with(pathLine){instance_destroy()}
                                    pathLine = pathLine2
                                }
                                else{
                                    path = false
                                }
                            }
                            else if(!position_meeting(pathLine.x+32, pathLine.y+64, obj_horz_placed_line)){
                                instance_create(pathLine.x, pathLine.y+64, obj_horz_placed_line)
                            }
                        } 
                    }
                }
            }
            if(tempNumVertFreeSpots!=0){
                if(tempFreeVertSpots[1]==0){
                    
                }
            }
            for(i=0;tempNumHorzFreeSpots!=0;i+=2){
                if(tempFreeHorzSpots[i+1]==0){
                        
                }
            }
            for(i=0;tempNumHorzFreeSpots!=0;i+=2){
                if(tempFreeHorzSpots[i+1]==0){
                        
                }
            }
        }
     }*/
       
    
     
     
         
    //pick a random free spot to place a line
    if(!instance_exists(line)){
        if(floor(random(2))==1&amp;&amp;numFreeHorzSpots&gt;0){
            randomIndex = (floor(random(numFreeHorzSpots/2)))*2
            xVal = freeHorzSpots[randomIndex]
            yVal = freeHorzSpots[randomIndex+1]
            newLine = instance_create(xVal,yVal,obj_horz_placed_line)
        }
        else if(numFreeVertSpots&gt;0){
            randomIndex = (floor(random(numFreeVertSpots/2)))*2
            xVal = freeVertSpots[randomIndex]
            yVal = freeVertSpots[randomIndex+1]
            newLine = instance_create(xVal,yVal,obj_vert_placed_line)
        }
    }
    
    //debug stuff
    /*if(!instance_exists(line)){
        obj_line_point.xVal = -1
        obj_line_point.yVal = -1
    }
    else{
        if(object_get_name(newLine.object_index)=="obj_vert_placed_line"){
            if(newLine.y&gt;room_height-64){
                obj_line_point.xVal = -2
                obj_line_point.yVal = -2
            }
        }
        else{
            if(newLine.x&gt;=room_width-64){
                obj_line_point.xVal = -3
                obj_line_point.yVal = -3
            }
        }
    }*/
    


}




if(!obj_game_controler.playerOneTurn&amp;&amp;!scored){
    obj_game_controler.playerOneTurn = true
}
startTurn = false
scored = false
if(instance_exists(newLine)){
    obj_game_controler.lineArray[obj_game_controler.numLines] = newLine
    obj_game_controler.numLines++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_size_of_room_text.singlePlayer){
    if(!obj_game_controler.playerOneTurn&amp;&amp;!startTurn){
        freeHorzSpots = noone
        freeVertSpots = noone
        numFreeHorzSpots = 0
        numFreeVertSpots = 0
        dots = sqrt(obj_game_controler.dotCount)
        for(i=1;i&lt;=dots;i++){
            for(j=1;j&lt;=dots-1;j++){
                if(!position_meeting((64*j)+32,64*i,obj_horz_placed_line)){
                    freeHorzSpots[numFreeHorzSpots] = 64*j
                    freeHorzSpots[numFreeHorzSpots+1] = 64*i 
                    numFreeHorzSpots+=2
                }
                if(!position_meeting((64*i),(64*j)+32,obj_vert_placed_line)){
                    freeVertSpots[numFreeVertSpots] = 64*i
                    freeVertSpots[numFreeVertSpots+1] = 64*j
                    numFreeVertSpots+=2
                }
            }
        }
        alarm[0] = 30
        startTurn = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
