<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
rDown = false
bDown = false
gDown = false
rVal = 0
bVal = 0
gVal = 0
r = floor(random(255))
b = floor(random(255))
g = floor(random(255))
background_colour = make_color_rgb(r,b,g)
dif = 0.0001
getDifficulty = false
audio_play_sound(snd_music,1,0)
wasPlaying1 = true
wasPlaying2 = false
wasPlaying3 = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(getDifficulty){
    box = instance_nearest(room_width,room_height,obj_difficulty)
    if(box.red==255){
        dif+=1
    }
    while(box.hasNext){
        box = box.box
        if(box.red==255){
            dif+=1
            show_debug_message("test1")
        }
        show_debug_message("test2")
    }
    getDifficulty = false
    room_goto_next()
}
if(wasPlaying1 and !audio_is_playing(snd_music)){
    audio_play_sound(snd_music_3,1,0)
}
if(wasPlaying3 and !audio_is_playing(snd_music_3)){
    audio_play_sound(snd_music_2,1,0)
}
if(wasPlaying2 and !audio_is_playing(snd_music_2)){
    audio_play_sound(snd_music,1,0)
}
wasPlaying1 = audio_is_playing(snd_music)
wasPlaying2 = audio_is_playing(snd_music_2)
wasPlaying3 = audio_is_playing(snd_music_3)



//if(room==rm_menu){
    background_colour = make_color_rgb(r,b,g)
    change = ceil(random(3))
    rVal = ceil(random(3))
    bVal = ceil(random(3))
    gVal = ceil(random(3))
    if(g+gVal&gt;250){
        gDown = true
    }
    else if(g+gVal&lt;5){
        gDown = false
    }
    
    if(b+bVal&gt;250){
        bDown = true
    }
    else if(b+bVal&lt;5){
        bDown = false
    }
    
    if(r+rVal&gt;250){
        rDown = true
    }
    else if(r+rVal&lt;5){
        rDown = false
    }
    
    if(gDown){
        gVal*=-1
    }
    if(bDown){
        bVal*=-1
    }
    if(rDown){
        rVal*=-1
    }
    
    if(change==1){
        r += rVal
    }
    else if(change == 2){
        b += bVal
    }
    else{
        g += gVal
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
