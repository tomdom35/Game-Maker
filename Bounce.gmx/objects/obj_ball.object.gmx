<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball_original</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(random(2)&gt;1){
    direction = random(90) + 225
}
else{
    direction = random(90) + 45
}
curve = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y&lt;0){
    x=room_width/2
    y=room_height/2
    speed=0
    obj_controler.alarm[0] = -1
    obj_controler.alarm[1] = -1
    obj_controler.alarm[2] = -1
    obj_controler.canChangeBackground = false
    if(obj_cpu.sprite_index == spr_cpu_paddle_long){
        obj_cpu.sprite_index = spr_cpu_paddle_1
    }
    if(obj_cpu.sprite_index == spr_cpu_paddle_1){
        obj_cpu.sprite_index = spr_cpu_paddle_2
    }
    else if(obj_cpu.sprite_index == spr_cpu_paddle_2){
        obj_cpu.sprite_index = spr_cpu_paddle_3
    }
    else{
        room_goto_next()
    }
}
if(y&gt;room_height){
    x=room_width/2
    y=room_height/2
    speed=0
    obj_controler.alarm[0] = -1
    obj_controler.alarm[1] = -1
    obj_controler.alarm[2] = -1
    obj_controler.canChangeBackground = false
    if(!instance_exists(obj_extra_life)){
        if(obj_player.sprite_index == spr_paddle_long){
            obj_player.sprite_index = spr_paddle_1
        }
        else if(obj_player.sprite_index == spr_paddle_1){
            obj_player.sprite_index = spr_paddle_2
        }
        else if(obj_player.sprite_index == spr_paddle_2){
            obj_player.sprite_index = spr_paddle_3
        }
        else{
            room_goto(rm_end_lose)
        }
    }
    else{
        life = instance_nearest(room_width,room_height,obj_extra_life)
        with(life){
            instance_destroy()
        }
        if(obj_player.offset&gt;0){
            obj_player.offset-=75
        }
    }
}

if(curve and direction&lt;150 and direction&gt;40){
    direction+= curvesp
    if(curvesp&gt;0){
        curvesp+=0.05
    }
    else{
        curvesp-=0.05
    }
}

if(speed==0){
    if(keyboard_check_pressed(vk_space)){
        speed = 10
        obj_cpu.fade = 0
        obj_cpu.x = x
        obj_controler.canSpawn = true
        obj_controler.canChangeBackground = true
        obj_controler.offset = 0
        obj_controler.alarm[2] = room_speed*2
        obj_cpu.energy = 0
        obj_cpu.fade = 0
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cpu">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(false)
speed+=1
direction+=obj_cpu.sp
curve = false
if(direction&gt;320){
    direction=320
}
if(direction&lt;210){
    direction=210
}
if(direction&gt;260 and direction&lt;280){
    direction+=(20 - random(40))
}
audio_sound_pitch(snd_bounce,1+random(5))
audio_play_sound(snd_bounce,1,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(false)
cruve = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(false)
speed+=1
direction+=obj_player.sp
if(abs(obj_player.sp)&gt;=20){
    curve = true
    curvesp = obj_player.sp/50
}
else{
    curve = false
}
if(direction&gt;150){
    direction = 150
}
if(direction&lt;30){
    direction=30
}
audio_sound_pitch(snd_bounce,1+random(5))
audio_play_sound(snd_bounce,1,false)
if(mouse_check_button(mb_left)){
    if(obj_power.sprite_index == spr_low_power){
        /*if(obj_cpu.speedToggle){
            obj_cpu.fade+=20
        }
        else{
            obj_cpu.fade-=20
        }*/
        speed+=4
        obj_cpu.energy+=0.05
        audio_play_sound(snd_low_power_hit,1,false)
        ex = instance_create(x,y,obj_explosion)
        ex.sprite_index = spr_red_explosion
    }
    else if(obj_power.sprite_index == spr_medium_power){
        /*if(obj_cpu.speedToggle){
            obj_cpu.fade+=30
        }
        else{
            obj_cpu.fade-=30
        }*/
        speed+=6
        obj_cpu.energy+=0.1
        audio_play_sound(snd_medium_power_hit,1,false)
        ex = instance_create(x,y,obj_explosion)
        ex.sprite_index = spr_orange_explosion
    }
    else if(obj_power.sprite_index == spr_high_power){
        /*if(obj_cpu.speedToggle){
            obj_cpu.fade+=40
        }
        else{
            obj_cpu.fade-=40
        }*/
        speed+=8
        obj_cpu.energy+=0.2
        audio_play_sound(snd_high_power_hit,1,false)
        ex = instance_create(x,y,obj_explosion)
        ex.sprite_index = spr_yellow_explosion
    }
    else if(obj_power.sprite_index == spr_full_power){
        /*if(obj_cpu.speedToggle){
            obj_cpu.fade+=50
        }
        else{
            obj_cpu.fade-=50
        }*/
        speed+=10
        obj_cpu.energy+=0.3
        audio_play_sound(snd_full_power_hit,1,false)
        ex = instance_create(x,y,obj_explosion)
        ex.sprite_index = spr_green_explosion
    }
    obj_power.sprite_index = spr_no_power
}

/*if(mouse_check_button(mb_right)){
    if(obj_cpu.speedToggle){
        obj_cpu.fade+=50
    }
    else{
        obj_cpu.fade-=50
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
