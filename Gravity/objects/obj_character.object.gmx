<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_facing_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facingUp = false
facingDown = false
facingRight = true
facingLeft = false
jumping = false
sp = 5
rotSpeed = 10
done = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//start jumping
if(keyboard_check_pressed(vk_space) &amp;&amp; !jumping){
    jumping = true
    jumpSpeed = 15
}
//falling after rotating screen
if(!place_meeting(x,y+1,obj_square) &amp;&amp; !jumping &amp;&amp; image_angle == 0){
    jumping = true
    jumpSpeed = -1
}
else if(!place_meeting(x-1,y,obj_square) &amp;&amp; !jumping &amp;&amp; (image_angle == -90 || image_angle == 270)){
    jumping = true
    jumpSpeed = -1    
}
else if(!place_meeting(x,y-1,obj_square) &amp;&amp; !jumping &amp;&amp; (image_angle == -180 || image_angle == 180)){
    jumping = true
    jumpSpeed = -1    
}
else if(!place_meeting(x+1,y,obj_square) &amp;&amp; !jumping &amp;&amp; (image_angle == -270 || image_angle == 90)){
    jumping = true
    jumpSpeed = -1    
}
//if stuck in block after rotating
if(place_meeting(x,y,obj_square)){

    if(image_angle == 0){
        y-=16
    }
    else if(image_angle == -90 || image_angle == 270){
        x+=16
    }
    else if(image_angle == -180 || image_angle == 180){
        y+=16
    }
    else if(image_angle == -270 || image_angle == 90){
        x-=16
    }
}

//while in air
if(jumping){
    if(image_angle == 0){
        if(!place_meeting(x,y-jumpSpeed,obj_square)){
            y-=jumpSpeed
            jumpSpeed--
        }
        else{
            jumpSpeed=-1
        }
        if(place_meeting(x,y+abs(jumpSpeed),obj_square)&amp;&amp;jumpSpeed&lt;0){
            jumping = false
            square = instance_nearest(x,y,obj_square)
            while(!place_meeting(x,y+1,obj_square)){
                y++
            }
        }
    }
    
    else if(image_angle == -90 || image_angle == 270){
        if(!place_meeting(x+jumpSpeed,y,obj_square)){
            x+=jumpSpeed
            jumpSpeed--
        }
        else{
            jumpSpeed=-1
        }
        if(place_meeting(x-abs(jumpSpeed),y,obj_square)&amp;&amp;jumpSpeed&lt;0){
            jumping = false
            square = instance_nearest(x,y,obj_square)
            while(!place_meeting(x-1,y,obj_square)){
                x--
            }
        }
    }
    else if(image_angle == -180 || image_angle == 180){
        if(!place_meeting(x,y+jumpSpeed,obj_square)){
            y+=jumpSpeed
            jumpSpeed--
        }
        else{
            jumpSpeed=-1
        }
        if(place_meeting(x,y-abs(jumpSpeed),obj_square)&amp;&amp;jumpSpeed&lt;0){
            jumping = false
            square = instance_nearest(x,y,obj_square)
            while(!place_meeting(x,y-1,obj_square)){
                y--
            }
        }
    }
    else if (image_angle == -270 || image_angle == 90){
        if(!place_meeting(x-jumpSpeed,y,obj_square)){
            x-=jumpSpeed
            jumpSpeed--
        }
        else{
            jumpSpeed=-1
        }
        if(place_meeting(x+abs(jumpSpeed),y,obj_square)&amp;&amp;jumpSpeed&lt;0){
            jumping = false
            square = instance_nearest(x,y,obj_square)
            while(!place_meeting(x+1,y,obj_square)){
                x++
            }
        }
    }
}

if(obj_controler.changeAngleLeft){
    image_angle-=rotSpeed
    if(image_angle == 360 || image_angle == -360){
        image_angle = 0
    }
}
else if(obj_controler.changeAngleRight){
    image_angle+=rotSpeed
    if(image_angle == 360 || image_angle == -360){
        image_angle = 0
    }
}

/*if(keyboard_check(vk_up)){
    facingUp = true
    facingDown = false
    facingRight = false
    facingLeft = false
    sprite_index = spr_walking_up
    y-=sp
}
else if(facingUp){
    sprite_index = spr_facing_up
}

if(keyboard_check(vk_down)){
    facingDown = true
    facingUp = false
    facingRight = false
    facingLeft = false
    sprite_index = spr_walking_down
    y+=sp
}
else if(facingDown){
    sprite_index = spr_facing_down
}*/

if(keyboard_check(ord('D'))){
    facingRight = true
    facingUp = false
    facingDown = false
    facingLeft = false
    sprite_index = spr_walking_right
    if(image_angle ==0 &amp;&amp; !place_meeting(x+10,y,obj_square)){
        x+=sp
    }
    else if((image_angle == -90 || image_angle == 270) &amp;&amp; !place_meeting(x,y+10,obj_square)){
        y+=sp
    }
    else if((image_angle == -180 || image_angle == 180) &amp;&amp; !place_meeting(x-10,y,obj_square)){
        x-=sp
    }
    else if((image_angle == -270 || image_angle == 90) &amp;&amp; !place_meeting(x,y-10,obj_square)){
        y-=sp
    }
}
else if(facingRight){
    sprite_index = spr_facing_right
}

if(keyboard_check(ord('A'))){
    facingLeft = true
    facingUp = false
    facingDown = false
    facingRight = false
    sprite_index = spr_walking_left
    if(image_angle ==0 &amp;&amp; !place_meeting(x-10,y,obj_square)){
        x-=sp
    }
    else if((image_angle == -90 || image_angle == 270) &amp;&amp; !place_meeting(x,y-10,obj_square)){
        y-=sp
    }
    else if((image_angle == -180 || image_angle == 180) &amp;&amp; !place_meeting(x+10,y,obj_square)){
        x+=sp
    }
    else if((image_angle == -270 || image_angle == 90) &amp;&amp; !place_meeting(x,y+10,obj_square)){
        y+=sp
    }
}
else if(facingLeft){
    sprite_index = spr_facing_left
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_finish">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!done){
    done = true
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
