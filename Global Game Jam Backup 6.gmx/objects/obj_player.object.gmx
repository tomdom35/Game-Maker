<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num = 0;
closest_clickable_object_x = 0;
closest_clickable_object_y = 0;
closest_clickable_object_name = "";
closest_clickable_object_message = "";
touchingRight = false;
touchingLeft = false;
touchingUp = false;
touchingDown = false;
showNoOilText = false;
showInvestigatedText = false;
investigated = false;
zoomedOut = false;
canInteract = false;
interacting = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check_direct(vk_up);
down = keyboard_check_direct(vk_down);
left = keyboard_check_direct(vk_left);
right = keyboard_check_direct(vk_right);

//Movement
if(up&amp;&amp;!touchingUp&amp;&amp;!interacting&amp;&amp;!showNoOilText&amp;&amp;!showInvestigatedText)
    y-=10;
if(down&amp;&amp;!touchingDown&amp;&amp;!interacting&amp;&amp;!showNoOilText&amp;&amp;!showInvestigatedText)
    y+=10;
if(left&amp;&amp;!touchingLeft&amp;&amp;!interacting&amp;&amp;!showNoOilText&amp;&amp;!showInvestigatedText)
    x-=10;
if(right&amp;&amp;!touchingRight&amp;&amp;!interacting&amp;&amp;!showNoOilText&amp;&amp;!showInvestigatedText)
    x+=10;
if(up||down||left||right)
    isMoving = true;
else
    isMoving = false;

    
    
if(showNoOilText)
    if(keyboard_check_pressed(vk_shift))
    {
        showNoOilText = false;
        if(touchingUp)
            y+=10;
        if(touchingDown)
            y-=10;
        if(touchingRight)
            x-=10;
        if(touchingLeft)
            x+=10;
    }
if(interacting)
    if(keyboard_check_pressed(vk_shift))
    {
        if(closest_clickable_object.currentPage + 1 &lt; array_length_1d(closest_clickable_object.message))
           closest_clickable_object.currentPage++;
        else
        {
            interacting = false;
            if(touchingUp)
                y+=10;
            if(touchingDown)
                y-=10;
            if(touchingRight)
                x-=10;
            if(touchingLeft)
                x+=10;
            closest_clickable_object.currentPage = 0;
        }
    }
if(showInvestigatedText)
    if(keyboard_check_pressed(vk_shift))
    {
        showInvestigatedText = false; 
        if(touchingUp)
            y+=10;
        if(touchingDown)
            y-=10;
        if(touchingRight)
            x-=10;
        if(touchingLeft)
            x+=10;
    }
     
    
         
//Collisions
if(place_meeting(x+10,y,parent_interact))
{
    touchingRight = true;
    closest_clickable_object = instance_nearest(x,y,parent_interact)
    x=closest_clickable_object.x-32;
}
else 
    touchingRight = false;
    
if(place_meeting(x-10,y,parent_interact))
{
    touchingLeft = true;
    closest_clickable_object = instance_nearest(x,y,parent_interact)
    x=closest_clickable_object.x+32;
}
else
    touchingLeft = false;

if(place_meeting(x,y+10,parent_interact))
{
    touchingDown = true;
    closest_clickable_object = instance_nearest(x,y,parent_interact)
    y=closest_clickable_object.y-32;
}
else
    touchingDown = false;

if(place_meeting(x,y-10,parent_interact))
{
    touchingUp = true;
    closest_clickable_object = instance_nearest(x,y,parent_interact)
    y=closest_clickable_object.y+32;
}
else
    touchingUp = false;

    
    
//Interacting

if(touchingUp||touchingDown||touchingLeft||touchingRight) 
{
    canInteract = true;
    closest_clickable_object_x = closest_clickable_object.x;
    closest_clickable_object_y = closest_clickable_object.y;
    closest_clickable_object_name = closest_clickable_object.name;
    closest_clickable_object_message = closest_clickable_object.message[closest_clickable_object.currentPage];
    if(keyboard_check_pressed(vk_shift)&amp;&amp;(instance_exists(obj_oilBar)||room == rm_ally)) // Nyles Add
    {
        if(num&gt;0)
        {
            for(count=0;count&lt;num;count++)
            {
                if(interactedObject[count] == closest_clickable_object)
                {
                    investigated = true;
                    break;
                }
                else
                    investigated = false;
            }
        }
        if(num==0||!investigated)
        {
            interacting = true;
            deleteOil = instance_nearest(view_xview[0],view_yview[0],obj_oilBar);
            with(deleteOil)instance_destroy();
            interactedObject[num] = closest_clickable_object;
            num++;
        }
        else if(investigated&amp;&amp;closest_clickable_object.currentPage == 0)
            showInvestigatedText = true;
    }
    else if(keyboard_check_pressed(vk_shift)&amp;&amp;closest_clickable_object.currentPage == 0)
        showNoOilText = true;
}
else 
    canInteract = false;



//Glow
if(instance_exists(obj_oilBar)&amp;&amp;!instance_exists(obj_light))
    //instance_create(x+16,y+16,obj_glow);
    instance_create(0,0,obj_light);
else if (!instance_exists(obj_oilBar))
    with(obj_light) instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=x;
y=y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_candle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(obj_oilBar))
{
    instance_create(room_width-150,50, obj_oilBar);
    instance_create(room_width -250,50, obj_oilBar);
    instance_create(room_width-350,50, obj_oilBar);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
